<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance on Tacy - Notes</title>
    <link>http://tacy.github.io/tags/performance/</link>
    <description>Recent content in Performance on Tacy - Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://tacy.github.io/tags/performance/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Axis2 performance improve</title>
      <link>http://tacy.github.io/post/axis2-performance-improve/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/axis2-performance-improve/</guid>
      <description>上面一篇关于连接超时的文章，就是由于axis2客户端实现导致，下面是我用测试代码（启了4个线程，每个线程做4次调用）运行过程中的抓包： 可以看</description>
    </item>
    
    <item>
      <title>Java性能分析之火焰图</title>
      <link>http://tacy.github.io/post/flamegraph/</link>
      <pubDate>Wed, 16 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/flamegraph/</guid>
      <description>FlameGraph 火焰图[fn:1]，简单通过x轴横条宽度来度量时间指标，y轴代表线程栈的层次，简单明了， 容易找出具体的可优化点，非常方便，当然前提是我们通</description>
    </item>
    
    <item>
      <title>Byteman notes</title>
      <link>http://tacy.github.io/post/byteman/</link>
      <pubDate>Wed, 11 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/byteman/</guid>
      <description>Byteman byteman是jboss下的一个项目，是一个非常方便的java分析工具，能够拦截字节码执行，执 行代码和修改变量，是一个诊断问题的利器。 在</description>
    </item>
    
    <item>
      <title>systemtap notes</title>
      <link>http://tacy.github.io/post/systemtap/</link>
      <pubDate>Tue, 10 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/systemtap/</guid>
      <description>Systemtap systemtap是红帽开发的一款分析工具，如果你需要使用的话，最好在redhat的系统上，在 Ubuntu上兼容性不好，坑非常多，Ubun</description>
    </item>
    
    <item>
      <title>perf notes</title>
      <link>http://tacy.github.io/post/linux-perf/</link>
      <pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/linux-perf/</guid>
      <description>perf strace相性对于很多熟悉linux的人来说应该都有所了解，使用起来也非常方便，但是他也 有很多问题，容易导致进程响应缓慢等，当然他对于诊</description>
    </item>
    
    <item>
      <title>HotSpot GC日志解读</title>
      <link>http://tacy.github.io/post/hotspot-gc/</link>
      <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/hotspot-gc/</guid>
      <description>HotSpot GC 对于Java应用的优化，GC是重要的一环，而读懂GC日志是调优GC的关键，本文尝试对GC 做一些解读，测试使用的JVM版本是1.6.0_4</description>
    </item>
    
    <item>
      <title>理解Oracle AWR报告</title>
      <link>http://tacy.github.io/post/oracle-awr/</link>
      <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/oracle-awr/</guid>
      <description>Oracle AWR Automatic Workload Repository gathers, processes and maintains performance stats used for problem detection and self-tuning the databases. This collective information can be displayed as views and reports (HTML/text) to better show the current database performance status for further analysis. AWR gathers the following data: 1. Object Statistics (access / usage stats of DB segments) 2. Time Model Statistics (V$SYS_TIME_MODEL and V$SESS_TIME_MODEL views) 3. Some of the System and</description>
    </item>
    
    <item>
      <title>Storage notes</title>
      <link>http://tacy.github.io/post/storage/</link>
      <pubDate>Fri, 21 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/storage/</guid>
      <description>硬盘IOPS[fn:3][fn:4] | size | RPM | Seek time | Avg Rota latency | Throught | Random IOPS | | | | | 0.5/(RPM/60) | | 1/(seek+latency) | |&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;-+&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;&amp;mdash;-+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;| | 2.5 | 15000 | 4ms | 2ms | 6Gbps | ~175-210 | | 2.5 | 10000 | 4ms | 3ms | 6Gbps | ~175-210</description>
    </item>
    
  </channel>
</rss>