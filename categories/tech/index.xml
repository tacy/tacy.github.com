<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Tacy - Notes</title>
    <link>http://tacy.github.io/categories/tech/</link>
    <description>Recent content in Tech on Tacy - Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 19 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://tacy.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jetty接入异常</title>
      <link>http://tacy.github.io/post/java-cause-accept-except/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/java-cause-accept-except/</guid>
      <description>故障现象 客户现场测试，部署的一个集成平台，Java，基于RHEL，在自己机器上测试一切正常，部署到客户机器怎么都无法调通，后台也没有任何日志</description>
    </item>
    
    <item>
      <title>java应用未关闭的http连接分析</title>
      <link>http://tacy.github.io/post/java-http-connect-unclose/</link>
      <pubDate>Thu, 18 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/java-http-connect-unclose/</guid>
      <description>正常情况下，我们创建的http连接都需要主动关闭（也有很多http连接池管理的实现帮助你，你也需要release回到池中）。但依然有些丑陋的</description>
    </item>
    
    <item>
      <title>Axis2 performance improve</title>
      <link>http://tacy.github.io/post/axis2-performance-improve/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/axis2-performance-improve/</guid>
      <description>上面一篇关于连接超时的文章，就是由于axis2客户端实现导致，下面是我用测试代码（启了4个线程，每个线程做4次调用）运行过程中的抓包： 可以看</description>
    </item>
    
    <item>
      <title>tcp connect can&#39;t establish</title>
      <link>http://tacy.github.io/post/network-troubleshooting-tcp-connect-cant-established/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/network-troubleshooting-tcp-connect-cant-established/</guid>
      <description>最近碰到一起网络故障，有代表意义，记录下过程 故障现象 客户系统频繁报调用超时，检查后端服务提供方日志，并没有发现服务调用异常情况，服务调用时长</description>
    </item>
    
    <item>
      <title>binary notes</title>
      <link>http://tacy.github.io/post/binary/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/binary/</guid>
      <description>编译之后产生的二进制文件，有很多种不同的格式，一般在linux下，elf是最常用的，如果没有特殊说明，这里指的都是elf格式的二进制文件 ELF readelf</description>
    </item>
    
    <item>
      <title>Linux trace</title>
      <link>http://tacy.github.io/post/trace/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/trace/</guid>
      <description>对于linux下的trace，我建议你参考Brendan Gregg的文章：Choosing a linux tracer，里面详细列出了linux下每个t</description>
    </item>
    
    <item>
      <title>gdb notes</title>
      <link>http://tacy.github.io/post/gdb/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/gdb/</guid>
      <description>linux下最重要的debug工具，对于问题分析，非常有帮助。掌握gdb对于linux开发和故障诊断是必备的技能。 info info addr # info symbol # 显示地址的s</description>
    </item>
    
    <item>
      <title>Heapster monitor java by custom metrics</title>
      <link>http://tacy.github.io/post/heapster-monitor-java-by-custom-metrics/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/heapster-monitor-java-by-custom-metrics/</guid>
      <description>Heapster monitor java by custom metrics Heapster是kubernetes的监控组件, 它负责收集Node上Cadvisor提供的监控信息, 推送给上游监控组件. 除了缺</description>
    </item>
    
    <item>
      <title>openshift notes</title>
      <link>http://tacy.github.io/post/openshift/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/openshift/</guid>
      <description>Openshift 权限控制 https://docs.openshift.com/container-platform/3.3/architecture/additional_concepts/authorization.html 首先是认证, 可以设置自己的认证服务器, 缺省用htpasswd 然后是权限控制: rule规则, role角色(规则集), bind绑定角</description>
    </item>
    
    <item>
      <title>mysql notes</title>
      <link>http://tacy.github.io/post/mysql/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/mysql/</guid>
      <description>read-only user Adding the new MySQL user Connect to your database as root, then add your new user like so: CREATE USER &amp;lsquo;lele&amp;rsquo;@&amp;lsquo;%&amp;rsquo; IDENTIFIED BY &amp;lsquo;lele_lelelele&amp;rsquo;; The % here means the user &amp;lsquo;tester&amp;rsquo; connecting from any host, you can place a network hostname here instead if you want to restrict access further. Naturally you will also want to substitute password with something a little stronger ;-) Now run the following</description>
    </item>
    
    <item>
      <title>django notes</title>
      <link>http://tacy.github.io/post/django/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/django/</guid>
      <description>user python manage.py createsuperuser cors Using CORS django-cors-headers django debug $ python manage.py shell &amp;gt;&amp;gt;&amp;gt; import django &amp;gt;&amp;gt;&amp;gt; django.setup() from polls.models import Question, Choice &amp;gt;&amp;gt;&amp;gt; q = Question(question_text=&amp;ldquo;What&amp;rsquo;s new?&amp;rdquo;, pub_date=timezone.now()) Save the object into the database. You have to call save() explicitly. q.save() migrate 有时候, 你需要修改的model字段有约束, 例如外健,</description>
    </item>
    
    <item>
      <title>kubernetes notes</title>
      <link>http://tacy.github.io/post/kubernetes/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/kubernetes/</guid>
      <description>Dev Kubernetes项目对于开发人员的支持做的很好, 再Github仓库有开放指南, 非常详细. 简单记录以下过程 Kubernetes项目开发语</description>
    </item>
    
    <item>
      <title>golang notes</title>
      <link>http://tacy.github.io/post/go/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/go/</guid>
      <description>配置 pacman -S go export GOPATH=~/workspace/go/go-tools/ go get github.com/mailgun/godebug go get github.com/nsf/gocode go get github.com/rogpeppe/godef go get github.com/tools/godep go get golang.org/x/tools/cmd/goimports go get golang.org/x/tools/cmd/oracle export PATH=$PATH:~/workspace/go/go-tools/bin 不建议在bash_profile里面设置GOPATH，Go的依赖问题容易导致冲突，建议</description>
    </item>
    
    <item>
      <title>git notes</title>
      <link>http://tacy.github.io/post/git/</link>
      <pubDate>Tue, 12 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/git/</guid>
      <description>squash 在你的work branch完成某个feature之后，你需要merge到master： git checkout master git merge workbranch 这种做法的问题在于，一般你完成某个fea</description>
    </item>
    
    <item>
      <title>ceph notes</title>
      <link>http://tacy.github.io/post/ceph/</link>
      <pubDate>Wed, 08 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/ceph/</guid>
      <description>ceph重要的概念 ceph底层是RADOS(A reliable, autonomous, distributed object storage), RADOS由OSD和MON组成, 是ceph核心. - OSD: Object Storage Device - MON: 维护整个ceph集群的</description>
    </item>
    
    <item>
      <title>archlinux notes</title>
      <link>http://tacy.github.io/post/archlinux/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/archlinux/</guid>
      <description>my archlinux machine baseline archlinux包更新非常, 如果你经常需要安装包, 会频繁出现新安装的包更新了依赖包, 但是原来依赖这个依赖包的组件可能就不能运行了,</description>
    </item>
    
    <item>
      <title>l2tp ipsec in linode</title>
      <link>http://tacy.github.io/post/l2tp-ipsec-in-linode/</link>
      <pubDate>Wed, 24 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/l2tp-ipsec-in-linode/</guid>
      <description>我参考的配置帖子: https://raymii.org/s/tutorials/IPSEC_L2TP_vpn_with_Ubuntu_14.04.html 先注意下面问题: Two or more interfaces found, checking IP forwarding Failed 我的环境是: My Ubuntu 14.04 LTS Profile (Latest 64 bit (3.16.7-x86_64-linode49)) 如果已经配置了ip_forward, 没啥好说的, 直接升级</description>
    </item>
    
    <item>
      <title>本地KVM环境运行Kubernetes集群</title>
      <link>http://tacy.github.io/post/%E6%9C%AC%E5%9C%B0kvm%E7%8E%AF%E5%A2%83%E8%BF%90%E8%A1%8Ckubernetes%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Mon, 24 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/%E6%9C%AC%E5%9C%B0kvm%E7%8E%AF%E5%A2%83%E8%BF%90%E8%A1%8Ckubernetes%E9%9B%86%E7%BE%A4/</guid>
      <description>Kubernetes(后面简称为K8S)作为目前热门的容器集群管理软件, 很多人都希望能一探究竟, 但是它的文档大部分都是运行在IaaS平台之上</description>
    </item>
    
    <item>
      <title>在本地kvm环节下使用cloud image</title>
      <link>http://tacy.github.io/post/cloud-init/</link>
      <pubDate>Fri, 07 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/cloud-init/</guid>
      <description>在本地kvm环境下使用cloud image 大量的cloud image, 其实在本地虚拟环境也能使用, 这里简单介绍一下在我本机kvm环境下使用cloud image</description>
    </item>
    
    <item>
      <title>Raspberry Pi WirelessAP</title>
      <link>http://tacy.github.io/post/raspberry-pi-wirelessap/</link>
      <pubDate>Wed, 29 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tacy.github.io/post/raspberry-pi-wirelessap/</guid>
      <description>Raspberry Pi WirelessAP 有时候, 希望能做一些其他设备的抓包分析, 不想去折腾路由器, 就把手上的Raspberry Pi改造了一下, 当然你也能让他当成翻墙工具, 可以</description>
    </item>
    
  </channel>
</rss>